# -*- coding: utf-8 -*-
"""crocadile.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1pGpzHdpAdFwZfVB2m0z_HAjcScnv0VZ0
"""

!pip install transformers
!pip install transformers torch
!pip install python-docx
!pip install --upgrade jupyter ipywidgets
!pip install pymilvus
!pip install pymongo
!pip install datasets
!pip install accelerate -U
!pip install pymongo
!pip install 'pymongo[srv]'

from google.colab import drive
drive.mount('/content/drive')


import os
import logging
import re
from docx import Document
from transformers import MT5Tokenizer, MT5ForConditionalGeneration
import concurrent.futures


logging.basicConfig(filename='generation_logs.txt', level=logging.INFO, format='%(asctime)s - %(levelname)s - %(message)s')


model_name = "google/mt5-small"
tokenizer = MT5Tokenizer.from_pretrained(model_name)
model = MT5ForConditionalGeneration.from_pretrained(model_name)
model.to('cuda')


def clean_text(text):

    text = re.sub(r'<extra_id_\d+>', '', text)
    text = text.replace('.', '')
    return text.strip()


def generate_improved_text(text):
    logging.info(f"Начало обработки текста: {text[:30]}...")
    input_ids = tokenizer.encode("improve text: " + text, return_tensors="pt").to('cuda')
    generated_ids = model.generate(input_ids, max_length=512)
    improved_text = tokenizer.decode(generated_ids[0], skip_special_tokens=True)
    # Очистка текста
    improved_text = clean_text(improved_text)
    logging.info("Конец генерации")
    return improved_text


def process_paragraph(text):
    return generate_improved_text(text) if text.strip() else ""


doc_path = '/content/drive/My Drive/Colab Notebooks/elibrary_37083625_67327706.docx'
doc = Document(doc_path)
new_doc = Document()

with concurrent.futures.ThreadPoolExecutor() as executor:
    results = list(executor.map(process_paragraph, [para.text for para in doc.paragraphs]))

for result, para in zip(results, doc.paragraphs):
    new_para = new_doc.add_paragraph(result)
    for run in para.runs:
        new_run = new_para.add_run(run.text)
        new_run.bold = run.bold
        new_run.italic = run.italic
        new_run.underline = run.underline
        if run.font.size:
            new_run.font.size = run.font.size
        if run.font.name:
            new_run.font.name = run.font.name

new_doc_path = '/content/drive/My Drive/Colab Notebooks/19updated_elibrary_37083625_67327706.docx'
new_doc.save(new_doc_path)
logging.info("Файл успешно создан")